// Code generated by introspect; DO NOT EDIT.

package schema

type ProductInput struct {
	DescriptionHtml        *string                     `json:"descriptionHtml,omitempty"`
	Handle                 *string                     `json:"handle,omitempty"`
	Seo                    *SEOInput                   `json:"seo,omitempty"`
	ProductType            *string                     `json:"productType,omitempty"`
	Category               *string                     `json:"category,omitempty"`
	Tags                   []any                       `json:"tags"`
	TemplateSuffix         *string                     `json:"templateSuffix,omitempty"`
	GiftCardTemplateSuffix *string                     `json:"giftCardTemplateSuffix,omitempty"`
	Title                  *string                     `json:"title,omitempty"`
	Vendor                 *string                     `json:"vendor,omitempty"`
	GiftCard               *bool                       `json:"giftCard,omitempty"`
	RedirectNewHandle      *bool                       `json:"redirectNewHandle,omitempty"`
	CollectionsToJoin      []any                       `json:"collectionsToJoin"`
	CollectionsToLeave     []any                       `json:"collectionsToLeave"`
	CombinedListingRole    *CombinedListingsRole       `json:"combinedListingRole,omitempty"`
	ID                     *string                     `json:"id,omitempty"`
	Metafields             []any                       `json:"metafields"`
	ProductOptions         []any                       `json:"productOptions"`
	Status                 *ProductStatus              `json:"status,omitempty"`
	RequiresSellingPlan    *bool                       `json:"requiresSellingPlan,omitempty"`
	ClaimOwnership         *ProductClaimOwnershipInput `json:"claimOwnership,omitempty"`
}

type ProductClaimOwnershipInput struct {
	Bundles *bool `json:"bundles,omitempty"`
}

type SEOInput struct {
	Title       *string `json:"title,omitempty"`
	Description *string `json:"description,omitempty"`
}

type CustomerInput struct {
	Addresses             []any                               `json:"addresses"`
	Email                 *string                             `json:"email,omitempty"`
	FirstName             *string                             `json:"firstName,omitempty"`
	ID                    *string                             `json:"id,omitempty"`
	LastName              *string                             `json:"lastName,omitempty"`
	Locale                *string                             `json:"locale,omitempty"`
	Metafields            []any                               `json:"metafields"`
	Note                  *string                             `json:"note,omitempty"`
	Phone                 *string                             `json:"phone,omitempty"`
	Tags                  []any                               `json:"tags"`
	EmailMarketingConsent *CustomerEmailMarketingConsentInput `json:"emailMarketingConsent,omitempty"`
	SmsMarketingConsent   *CustomerSmsMarketingConsentInput   `json:"smsMarketingConsent,omitempty"`
	TaxExempt             *bool                               `json:"taxExempt,omitempty"`
	TaxExemptions         []any                               `json:"taxExemptions"`
}

type CustomerEmailMarketingConsentInput struct {
	MarketingOptInLevel *CustomerMarketingOptInLevel `json:"marketingOptInLevel,omitempty"`
	MarketingState      CustomerEmailMarketingState  `json:"marketingState"`
	ConsentUpdatedAt    *string                      `json:"consentUpdatedAt,omitempty"`
}

type CustomerSmsMarketingConsentInput struct {
	MarketingOptInLevel *CustomerMarketingOptInLevel `json:"marketingOptInLevel,omitempty"`
	MarketingState      CustomerSmsMarketingState    `json:"marketingState"`
	ConsentUpdatedAt    *string                      `json:"consentUpdatedAt,omitempty"`
}

type OptionCreateInput struct {
	Name            *string                     `json:"name,omitempty"`
	Position        *int                        `json:"position,omitempty"`
	Values          []any                       `json:"values"`
	LinkedMetafield *LinkedMetafieldCreateInput `json:"linkedMetafield,omitempty"`
}

type OptionValueCreateInput struct {
	Name                 *string `json:"name,omitempty"`
	LinkedMetafieldValue *string `json:"linkedMetafieldValue,omitempty"`
}

type LinkedMetafieldCreateInput struct {
	Namespace string                   `json:"namespace"`
	Key       string                   `json:"key"`
	Values    []OptionValueCreateInput `json:"values"`
}
